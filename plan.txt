# P3 Implementation Plan

## 1. OpenSSL/TLS Integration
- Add OpenSSL headers to server.cpp
- Create TLS context and configure for TLS 1.3
- Add functions to generate/load certificates
- Modify socket handling to use SSL connections
- Add error handling for SSL operations

## 2. Authentication System
- Replace HELO command with USER/PASS commands
- Add authentication state tracking
- Store credentials in .games_shadow file
- Update handleCommand() to process new auth commands

## 3. Password Management
- Implement random password generation
- Generate 16-byte salts using OpenSSL RAND_bytes()
- Implement PBKDF2-HMAC-SHA256 with 10,000 iterations
- Create functions for Base64 encoding/decoding

## 4. User Registration
- Add function to handle new user registration
- Generate and send secure password to client
- Store credentials in shadow file

## 5. Authentication Protocol
- Implement credential verification
- Track failed login attempts
- Close connection after 2 failed attempts
- Update command handler to enforce authentication

## 6. Certificate Generation
- Create function or script to generate self-signed certificates
- Store as p3server.key and p3server.crt
- Ensure certificates are properly loaded at startup

## 7. Testing
- Test TLS handshake with openssl s_client
- Test user registration and login
- Test login failure handling
- Verify all existing functionality works with new auth system

## 8. Documentation
- Update comments to reflect new security features
- Document auth protocol in code